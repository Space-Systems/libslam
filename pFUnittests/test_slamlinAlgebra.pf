!==============================================================================
!
!> @anchor  test_slamrlinAlgebra
!!
!> @brief   Program for testing slam_linearAlgebra
!!
!> @author  Arkene Chouchene (AC)
!!
!> @date    <ul>
!!            <li>20.05.2023 (initial design)</li>
!!          </ul>
!!
!! @details Program for testing invert_matrix function
!! Reference values : Matlab
!------------------------------------------------------------------------
module test_slamlinAlgebra
    use funit
    use slam_linAlgebra 
    use iso_fortran_env
    use slam_error_handling
    use slam_strings, only: toLowercase, toUppercase
    use slam_types
    use slam_math, only: pi, halfPi, twoPi, rad2deg, deg2rad

    implicit none

    contains
  
   @test
   subroutine test_invert_matrix()
        ! Tests the invert_matrix subroutine
        ! Reference Data : Mathlab
        real(8), dimension(3, 3) :: A
        real(8), dimension(3, 3) :: A_inv
        character(len=20) :: method = 'CHOLESKY'
        real(8), dimension(3, 3) :: expected

        ! Initialize the input matrix A
        A = reshape((/4.0, 1.0, 2.0, &
              1.0, 5.0, 3.0, &
              2.0, 3.0, 6.0/), (/3, 3/))

        ! Call the invert_matrix subroutine
              
        call invert_matrix(A, A_inv, method)
        write (*,*) A_inv
        ! Define the expected inverse matrix

        expected = reshape((/0.2999999, 1.3877787807814457E-017, -0.1, &
                            1.3877787807814457E-017, 0.28571428571428564, -0.14285714285714285, &
                            -0.1, -0.14285714285714285, 0.27142857142857146/), (/3, 3/))
        
        ! Check if the compute inverse matrix matches the expected inverse matrix
        @assertEqual(expected, A_inv, tolerance = 0.00001)
      
   end subroutine test_invert_matrix

end module test_slamlinAlgebra
      